{%- macro map_attrs(attrs={}, excludes=[]) %}
    {%- for k, v in attrs | items %}
        {%- if k not in excludes %}
            {%- if not loop.first %} {% endif %} {% if v == true or v == false %}{{ k }}{% else %}{{ k }}="{{ v }}"{% endif %}
        {%- endif %}
    {%- endfor %}
{%- endmacro %}

{% macro map_attrs_with_class(clazz, attrs={}, excludes=[]) -%}
    class="{{ clazz }} {{ attrs['class'] | default('') }}" {{ map_attrs(attrs, excludes=["class"]) }}
{%- endmacro %}

{% set font_classes = {
    'xs': 'px-2 py-1',
    'sm': 'px-2 py-1',
    'md': 'px-2.5 py-1.5',
    'lg': 'px-3 py-2',
    'xl': 'px-3.5 py-2.5',
} %}
{% set space_classes = {
    'xs': 'px-2 py-1',
    'sm': 'px-2 py-1',
    'md': 'px-2.5 py-1.5',
    'lg': 'px-3 py-2',
    'xl': 'px-3.5 py-2.5',
} %}
{% set svg_paths = {
    "info":      { "type": "fill",   "viewbox": "20", "paths": ["M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z"] },
    "success":   { "type": "fill",   "viewbox": "20", "paths": ["M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"] },
    "warn":      { "type": "fill",   "viewbox": "20", "paths": ["M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z"] },
    "error":     { "type": "fill",   "viewbox": "20", "paths": ["M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z"] },
    "ok":        { "type": "fill",   "viewbox": "20", "paths": ["M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"] },
    "clipboard": { "type": "stroke", "viewbox": "24", "paths": ["M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184"] },
    "hash":      { "type": "stroke", "viewbox": "24", "paths": ["M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5-3.9 19.5m-2.1-19.5-3.9 19.5"] },
    "upload":    { "type": "stroke", "viewbox": "24", "paths": ["M9 8.25H7.5a2.25 2.25 0 0 0-2.25 2.25v9a2.25 2.25 0 0 0 2.25 2.25h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25H15m0-3-3-3m0 0-3 3m3-3V15"] },
    "download":  { "type": "stroke", "viewbox": "24", "paths": ["M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3"] },
    "copy":      { "type": "stroke", "viewbox": "24", "paths": ["M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z"] },
    "visible":   { "type": "stroke", "viewbox": "24", "linecap": "round", "linejoin": "round",  "paths": ["M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z", "M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"] },
    "invisible": { "type": "stroke", "viewbox": "24", "linecap": "round", "linejoin": "round",  "paths": ["M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88"] },
} %}


{% macro primary_button(label, size="md", icon="", attrs={}) %}
    {%- set classes = {
        'xs': 'rounded bg-indigo-600 text-xs font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600',
        'sm': 'rounded bg-indigo-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600',
        'md': 'rounded-md bg-indigo-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600',
        'lg': 'rounded-md bg-indigo-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600',
        'xl': 'rounded-md bg-indigo-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600',
    } %}
    {%- set icon_classes = "inline-flex items-center gap-x-1.5 " if icon %}
    {%- set class_name = [icon_classes, space_classes[size], classes[size]] | join(" ") %}
    <button{% if not attrs["type"] %} type="button"{% endif %} {{ map_attrs_with_class(class_name, attrs) }}>
        {{ svg_tag(icon) if icon }}{{ label }}
    </button>
{% endmacro %}

{% macro secondary(type, label, size="md", bold=true, icon="", attrs={}, child="") %}
    {%- set classes = {
        'xs': 'rounded text-xs text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50',
        'sm': 'rounded text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50',
        'md': 'rounded-md text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50',
        'lg': 'rounded-md text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50',
        'xl': 'rounded-md text-sm text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50',
    } %}
    {%- set bold_class = "font-semibold" if bold else "" %}
    {%- set icon_classes = "inline-flex items-center gap-x-1.5" if icon else ""%}
    {%- set class_name = [icon_classes, bold_class, space_classes[size], classes[size]] | join(" ") %}
    {% if type == "button" %}
        <button {% if not attrs["type"] %} type="button"{% endif %} {{ map_attrs_with_class(class_name, attrs) }}>
            {{ svg_tag(icon) if icon }}{{ label }}{{ child if icon }}
        </button>
    {% endif %}
    {% if type == "link" %}
        <a {{ map_attrs_with_class(class_name, attrs) }}>
            {{ svg_tag(icon) if icon }}{{ label }}{{ child if icon }}
        </a>
    {% endif %}
{% endmacro %}

{% macro secondary_link(label, size="md", bold=true, icon="", attrs={}, child="") %}
    {{ secondary("link", label, size, bold, icon, attrs, child) }}
{% endmacro %}
{% macro secondary_button(label, size="md", bold=true, icon="", attrs={}, child="") %}
    {{ secondary("button", label, size, bold, icon, attrs, child) }}
{% endmacro %}

{% macro button_group(id, value, options={}, size="md") %}
<span class="isolate inline-flex rounded-md shadow-sm">
    {{ select(id, value, options, attrs={"class": "hidden mr-4"}) }}
    {%- for opt in options %}
        {%- if loop.first %}
            {% set class = "inline-flex items-center rounded-none rounded-l-md" %}
        {%- elif loop.last %}
            {% set class = "inline-flex items-center rounded-none rounded-r-md -ml-px" %}
        {%- else %}
            {% set class = "inline-flex items-center rounded-none -ml-px" %}
        {%- endif %}
        {% if value is defined %}
            {% set class_name = " bg-blue-100" if value == opt.key else "" %}
            {{ secondary_button(opt.value, size=size, bold=false, attrs={"class": class + class_name, "onclick": "do_check(this, '"+ opt.key +"')"}) }}
        {% else %}
            {% set class_name = " bg-blue-100" if opt.selected else "" %}
            {{ secondary_button(opt.value, size=size, bold=false, attrs={"class": class + class_name, "onclick": "do_check(this, '"+ opt.key +"')"}) }}
        {% endif %}
    {%- endfor %}
    <script>
        function do_check(el, key) {
            $(el).parent().children().removeClass("bg-blue-100")
            $(el).addClass("bg-blue-100")
            $("#{{ id }}").value(key)
        }
    </script>
</span>
{% endmacro %}


{% macro select(name, value, options={}, attrs={}) %}
<select name="{{ name }}" id="{{ name }}" {{ map_attrs_with_class("rounded-md border-0 py-1.5 pl-3 pr-10 text-gray-900 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6", attrs) }}>
{%- for option in options %}
    {%- if value is defined %}
    <option value="{{ option.key }}"{% if value == option.key %} selected{% endif %}>{{ option.value }}</option>
    {%- else %}
    <option value="{{ option.key }}"{% if option.selected %} selected{% endif %}>{{ option.value }}</option>
    {%- endif %}
{%- endfor %}
</select>
{% endmacro %}

{% macro svg_tag(name, size=5, clazz="") %}
    {%- set vb = svg_paths[name].viewbox %}
    {%- set paths = svg_paths[name].paths %}
    {%- set linejoin = svg_paths[name].linejoin %}
    {%- set linecap = svg_paths[name].linecap %}
    {%- if svg_paths[name].type == "fill" %}
        <svg class="h-{{ size}} w-{{ size}} {{ clazz }}" viewBox="0 0 {{ vb }} {{ vb }}" fill="currentColor" aria-hidden="true">
            {% for p in paths %}<path stroke-linecap="{{ linecap }}" stroke-linejoin="{{ linejoin }}" fill-rule="evenodd" clip-rule="evenodd" d="{{ p }}" />{% endfor %}
        </svg>
    {%- elif svg_paths[name].type == "stroke" %}
        <svg class="h-{{ size}} w-{{ size}} {{ clazz }}" viewBox="0 0 {{ vb }} {{ vb }}" fill="none" stroke="currentColor" aria-hidden="true">
            {% for p in paths %}<path stroke-linecap="{{ linecap }}" stroke-linejoin="{{ linejoin }}" fill-rule="evenodd" clip-rule="evenodd" d="{{ p }}" />{% endfor %}
        </svg>
    {%- endif %}
{% endmacro %}

{% macro alert(type="info", content="") %}
    {% set colors = {
        "info": "blue",
        "success": "green",
        "warn": "yellow",
        "error": "red"
    } %}
    <div class="rounded-md bg-{{ colors[type] }}-50 p-4">
        <div class="flex">
            <div class="flex-shrink-0">{{ svg_tag(type, clazz="text-" + colors[type] + "-400") }}</div>
            <div class="ml-3">
                <p class="text-sm font-medium text-{{ colors[type] }}-800">{{ content }}</p>
            </div>
            <div class="ml-auto pl-3">
                <div class="-mx-1.5 -my-1.5">
                    <button type="button" onclick="$('#message-alert').remove()" class="inline-flex rounded-md bg-{{ colors[type] }}-50 p-1.5 text-{{ colors[type] }}-500 hover:bg-{{ colors[type] }}-100 focus:outline-none focus:ring-2 focus:ring-{{ colors[type] }}-600 focus:ring-offset-2 focus:ring-offset-{{ colors[type] }}-50">
                        <span class="sr-only">Dismiss</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{% set input_base_class = "rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 " %}

{% macro input_base(type, id, value="", input_base_class="", attrs={}) %}
    <input type="{{ type }}" value="{{ value }}" name="{{ id }}" id="{{ id }}" {{ map_attrs_with_class(input_base_class, attrs) }} />
{% endmacro %}
{% macro input_hidden(id, value, attrs={}) %}
    {{ input_base("hidden", id, value, "", attrs) }}
{% endmacro %}
{% macro input_file(id, attrs={}) %}
    {{ input_base("file", id, "", "", attrs) }}
{% endmacro %}
{% macro input_range(id, value="", attrs={}) %}
    {{ input_base("range", id, value, "", attrs) }}
{% endmacro %}
{% macro input_text(id, value="", attrs={}) %}
    {{ input_base("text", id, value, input_base_class, attrs) }}
{% endmacro %}
{% macro input_number(id, value="", attrs={}) %}
    {{ input_base("number", id, value, input_base_class, attrs) }}
{% endmacro %}
{% macro textarea(id, value="", attrs={}) %}
    <textarea name="{{ id }}" id="{{ id }}" {{ map_attrs_with_class("font-mono block w-full rounded-md border-0 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6", attrs) }}>{{ value | escape }}</textarea>
{% endmacro %}

{% macro checkbox_field(id, label, checked) %}
<input id="{{ id }}" name="{{ id }}" {% if checked is true %}checked{% endif %} type="checkbox" class="h-4 w-4 mr-2 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600">
<label for="{{ id }}" class="text-gray-900 no-wrap">{{ label }}</label>
{% endmacro %}

{% macro radio_field(name, id, label, checkedValue) %}
<input id="{{ id }}" name="{{ name }}" value="{{ id }}" {% if checkedValue == id %}checked{% endif %} type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600">
<label for="{{ id }}" class="ml-3 block text-sm font-medium leading-6 text-gray-900 no-wrap">{{ label }}</label>
{% endmacro %}
